mcbride@cupejobsuat-web-1:~$ sudo ./install_nginx_ssl.sh cupejobsuat-web-1.uit.yorku.ca
Nginx is already installed.
nginx version: nginx/1.18.0 (Ubuntu)
Backup iptables rules...
Open ports 80 (HTTP) and 443 (HTTPS) in iptables
Save iptables changes so they persist across reboots
tee: /etc/iptables/rules.v4: Not a directory
# Generated by iptables-save v1.8.7 on Fri Jan 17 11:22:20 2025
*filter
:INPUT ACCEPT [1:36]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [22355:2186149]
:DOCKER - [0:0]
:DOCKER-ISOLATION-STAGE-1 - [0:0]
:DOCKER-ISOLATION-STAGE-2 - [0:0]
:DOCKER-USER - [0:0]
-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -s 130.63.59.0/25 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 192.168.0.13/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.3.226/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.59.0/25 -p icmp -j ACCEPT
-A INPUT -s 130.63.119.193/32 -p tcp -j ACCEPT
-A INPUT -s 130.63.119.193/32 -p udp -j ACCEPT
-A INPUT -s 130.63.119.193/32 -p icmp -j ACCEPT
-A INPUT -s 130.63.37.179/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.37.47/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.37.179/32 -p tcp -m tcp --dport 2222 -j ACCEPT
-A INPUT -s 130.63.37.47/32 -p tcp -m tcp --dport 2222 -j ACCEPT
-A INPUT -s 130.63.37.37/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.74.118/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.37.37/32 -p tcp -m tcp --dport 5666 -j ACCEPT
-A INPUT -s 130.63.74.118/32 -p tcp -m tcp --dport 5666 -j ACCEPT
-A INPUT -s 130.63.37.37/32 -p icmp -j ACCEPT
-A INPUT -s 130.63.74.118/32 -p icmp -j ACCEPT
-A INPUT -s 130.63.39.0/24 -p tcp -m tcp --dport 8400 -j ACCEPT
-A INPUT -s 130.63.39.0/24 -p tcp -m tcp --dport 8402 -j ACCEPT
-A INPUT -s 130.63.236.16/32 -p udp -m udp --dport 161 -j ACCEPT
-A INPUT -s 130.63.0.0/16 -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -s 130.63.0.0/16 -p udp -m udp --dport 53 -j ACCEPT
-A INPUT -s 130.63.0.0/16 -p tcp -m tcp --sport 53 -j ACCEPT
-A INPUT -s 130.63.0.0/16 -p udp -m udp --sport 53 -j ACCEPT
-A INPUT -s 130.63.119.0/24 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.174.25/32 -p tcp -j ACCEPT
-A INPUT -s 130.63.174.25/32 -p udp -j ACCEPT
-A INPUT -s 130.63.174.25/32 -p icmp -j ACCEPT
-A INPUT -s 130.63.174.25/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.174.24/32 -p tcp -j ACCEPT
-A INPUT -s 130.63.174.24/32 -p udp -j ACCEPT
-A INPUT -s 130.63.174.24/32 -p icmp -j ACCEPT
-A INPUT -s 130.63.174.24/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.174.20/32 -p tcp -j ACCEPT
-A INPUT -s 130.63.174.20/32 -p udp -j ACCEPT
-A INPUT -s 130.63.174.20/32 -p icmp -j ACCEPT
-A INPUT -s 130.63.174.20/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.174.21/32 -p tcp -j ACCEPT
-A INPUT -s 130.63.174.21/32 -p udp -j ACCEPT
-A INPUT -s 130.63.174.21/32 -p icmp -j ACCEPT
-A INPUT -s 130.63.174.21/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 10.80.192.208/29 -p tcp -j ACCEPT
-A INPUT -s 10.80.192.208/29 -p udp -j ACCEPT
-A INPUT -s 10.80.192.208/29 -p icmp -j ACCEPT
-A INPUT -s 10.80.192.208/29 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.221/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.222/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.223/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.224/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.225/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.226/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.20/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.21/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 130.63.1.22/32 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -j DROP
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-ISOLATION-STAGE-1
-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -o docker0 -j DOCKER
-A FORWARD -i docker0 ! -o docker0 -j ACCEPT
-A FORWARD -i docker0 -o docker0 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -j RETURN
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-ISOLATION-STAGE-2 -j RETURN
-A DOCKER-USER -j RETURN
COMMIT
# Completed on Fri Jan 17 11:22:20 2025
# Generated by iptables-save v1.8.7 on Fri Jan 17 11:22:20 2025
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:DOCKER - [0:0]
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i docker0 -j RETURN
COMMIT
# Completed on Fri Jan 17 11:22:20 2025
Enter the domain name for the SSL certificate (e.g., example.com): cupejobsuat-web-1.uit.yorku.ca
Enter your email address for urgent renewal and security notices (e.g., user@example.com): uit_eaas_team@yorku.ca
The domain cupejobsuat-web-1.uit.yorku.ca resolves correctly.
Do you want to take a backup of existing Nginx configuration files before making changes? (yes/no)
yes
Backing up Nginx configuration files...
Backup completed and stored in /etc/nginx-backup.
Updating system packages...
E: The update command takes no arguments
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
software-properties-common is already the newest version (0.99.22.9).
dnsutils is already the newest version (1:9.18.30-0ubuntu0.22.04.1).
0 upgraded, 0 newly installed, 0 to remove and 28 not upgraded.
Removing the PPA: ppa:certbot/certbot (if it exists)...
PPA publishes dbgsym, you may need to include 'main/debug' component
Repository: 'deb https://ppa.launchpadcontent.net/certbot/certbot/ubuntu/ jammy main'
Description:
The PPA has been DEPRECATED.

To get up to date instructions on how to get certbot for your systems, please see https://certbot.eff.org/docs/install.html.
More info: https://launchpad.net/~certbot/+archive/ubuntu/certbot
Removing repository.
Press [ENTER] to continue or Ctrl-c to cancel.
Disabling deb entry in /etc/apt/sources.list.d/certbot-ubuntu-certbot-jammy.list
Removing disabled deb entry from /etc/apt/sources.list.d/certbot-ubuntu-certbot-jammy.list
Removing disabled deb-src entry from /etc/apt/sources.list.d/certbot-ubuntu-certbot-jammy.list
Hit:1 http://ubuntu.uit.yorku.ca/ubuntu jammy InRelease
Hit:2 http://ubuntu.uit.yorku.ca/ubuntu jammy-security InRelease
Hit:3 http://ubuntu.uit.yorku.ca/ubuntu jammy-updates InRelease
Hit:4 https://download.docker.com/linux/ubuntu jammy InRelease
Reading package lists... Done
Starting Certbot installation via Snap...
certbot 3.1.0 from Certbot Project (certbot-effâœ“) installed
Certbot installed successfully.
Symbolic link created for Certbot.
certbot 3.1.0
Certbot installation completed. Version check passed.
Generating SSL certificate for cupejobsuat-web-1.uit.yorku.ca using email uit_eaas_team@yorku.ca...
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Would you be willing, once your first certificate is successfully issued, to
share your email address with the Electronic Frontier Foundation, a founding
partner of the Let's Encrypt project and the non-profit organization that
develops Certbot? We'd like to send you email about our work encrypting the web,
EFF news, campaigns, and ways to support digital freedom.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(Y)es/(N)o: N
Account registered.
Requesting a certificate for cupejobsuat-web-1.uit.yorku.ca

Successfully received certificate.
Certificate is saved at: /etc/letsencrypt/live/cupejobsuat-web-1.uit.yorku.ca/fullchain.pem
Key is saved at:         /etc/letsencrypt/live/cupejobsuat-web-1.uit.yorku.ca/privkey.pem
This certificate expires on 2025-04-17.
These files will be updated when the certificate renews.
Certbot has set up a scheduled task to automatically renew this certificate in the background.

Deploying certificate
Successfully deployed certificate for cupejobsuat-web-1.uit.yorku.ca to /etc/nginx/sites-enabled/default
Congratulations! You have successfully enabled HTTPS on https://cupejobsuat-web-1.uit.yorku.ca

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
If you like Certbot, please consider supporting our work by:
 * Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
 * Donating to EFF:                    https://eff.org/donate-le
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Verifying the SSL certificate installation...
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
Nginx configuration is valid and has been reloaded successfully.
Testing automatic renewal...
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/cupejobsuat-web-1.uit.yorku.ca.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Account registered.
Simulating renewal of an existing certificate for cupejobsuat-web-1.uit.yorku.ca

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Congratulations, all simulated renewals succeeded:
  /etc/letsencrypt/live/cupejobsuat-web-1.uit.yorku.ca/fullchain.pem (success)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Automatic renewal test passed.
SSL certificate installation and verification complete for cupejobsuat-web-1.uit.yorku.ca.
Auto-renewal is set up. Your SSL certificate will automatically renew and Nginx will reload after renewal.