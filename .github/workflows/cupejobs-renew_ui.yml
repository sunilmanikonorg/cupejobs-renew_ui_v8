name: Node.js CI

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [ 22.x ] # Update as per your requirement
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print working directory
        run: pwd

      - name: Verify repository files
        run: ls -R

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v4
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Build application
#        run: npm run build --if-present
#
#  package:
#    needs: build
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#      id-token: write
#    steps:
#      - name: Log in to the Container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ steps.meta.outputs.tags }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
#          labels: ${{ steps.meta.outputs.labels }}
#
#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true
